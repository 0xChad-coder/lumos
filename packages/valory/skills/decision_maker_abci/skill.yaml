name: decision_maker_abci
author: valory
version: 0.1.0
type: skill
description: This skill is responsible for the decision making and placing the bets.
  It samples a market based on its liquidity, it sends a request to a mech to decide
  what to vote for, it receives the response from the mech, it decides whether voting
  is profitable or not, and ultimately, it either bets or blacklists the market.
license: Apache-2.0
aea_version: '>=1.0.0, <2.0.0'
fingerprint:
  README.md: bafybeia367zzdwndvlhw27rvnwodytjo3ms7gbc3q7mhrrjqjgfasnk47i
  __init__.py: bafybeih563ujnigeci2ldzh7hakbau6a222vsed7leg3b7lq32vcn3nm4a
  behaviours/__init__.py: bafybeih6ddz2ocvm6x6ytvlbcz6oi4snb5ee5xh5h65nq4w2qf7fd7zfky
  behaviours/base.py: bafybeiaxgbkrrskfod55lhynd4ttkwrn6qwzugfmmwikzod4ar6pmjmcu4
  behaviours/bet_placement.py: bafybeifwwvvwh4qgf3jkyvza4wfvjv63il2xewsklsjtpyanp23y6hg2aa
  behaviours/blacklisting.py: bafybeicvespraci44y2dtddy4wi7cdhjuyk6crjs7ztnssm2rcrovha3hm
  behaviours/decision_receive.py: bafybeifn4xuv2z3niyhgd35ufncrdpaisw7pd4qkw2vv3cte5koqe2mxqy
  behaviours/decision_request.py: bafybeifjlh5cfitjd6wjcvcgoji2bhsi4r5nzpqocotwprmn26eiphlmqq
  behaviours/handle_failed_tx.py: bafybeidxpc6u575ymct5tdwutvzov6zqfdoio5irgldn3fw7q3lg36mmxm
  behaviours/reedem.py: bafybeib25frcafu6iikppidwqqovwjkzkxif6m3f4crmklohpj6yixprsq
  behaviours/round_behaviour.py: bafybeifk5utwuaneima4rdeow7tcpbe6hcc2utlzxcw3w7vsm5zw7zpamm
  behaviours/sampling.py: bafybeiadikynvkaofbko72jc45xthhmmjfmlkpgramormhxwk5u47rnwdu
  dialogues.py: bafybeigpwuzku3we7axmxeamg7vn656maww6emuztau5pg3ebsoquyfdqm
  fsm_specification.yaml: bafybeigrljw66oxyvn5wqecfgkcx7ozkjg7xuv75zcjmo25fft37qyed6y
  handlers.py: bafybeihj33szgrcxnpd73s4nvluyxwwsvhjum2cuq3ilhhe6vfola3k7vy
  models.py: bafybeibqou3ryuszu2vbwdp5b7fkj5oxmflgh3z3a7tuajbdxgzdolgmee
  payloads.py: bafybeifbnyviargcj5w5kbuuvc3o4y5sdogtuynd2b4ca4xsfbi3cqcwlm
  redeem_info.py: bafybeic7de4hrsgjmxbjht5ihasm5t7bykuonei5xxhpf3lpzq35fuxy74
  rounds.py: bafybeihpstybessozkb3hjxhf3gvf323zw4d575ihmxrsuzcyhqtbsruoq
  states/__init__.py: bafybeid23llnyp6j257dluxmrnztugo5llsrog7kua53hllyktz4dqhqoy
  states/base.py: bafybeif42mqu6wu55iyjyqxto3poyta22gdsswgtus55lo4qpmv74wvlmm
  states/bet_placement.py: bafybeibalhxhp2c4oljmiwqi6ds3g36fgtabmf42mb5sgq6z22znrcbhda
  states/blacklisting.py: bafybeiao747i4z7owk6dmwfuzdijag55m3ryj3nowfoggvczpgk3koza44
  states/decision_receive.py: bafybeifm3oyq2aji7f5yag6wpe4vr3ivi74pybdsk2jvmziiidx5nt7t4a
  states/decision_request.py: bafybeic7otc3hjb753svbmur3yyk6szahc25yii3x4w4vcnpfz6jwvacuu
  states/final_states.py: bafybeidiwhuyd5zm2cq7vhv2owcrxdpm7fnvn3db6p6tql4jz5hgpalflu
  states/handle_failed_tx.py: bafybeihewm2vernvhktuorljdupjqcg2p5vs6wvsira2d62wkoyo5xlzjm
  states/redeem.py: bafybeifl7qgs2xvm4nykloec5tq47sriqah3dzahv3gppvgtrrxzw5yyyq
  states/sampling.py: bafybeidnvdogjlthjfe7jpaiuezm3xydrbxxukyoss4gx6t5fdin52rsta
fingerprint_ignore_patterns: []
connections: []
contracts:
- valory/gnosis_safe:0.1.0:bafybeih7gkbdtnhkc3i53mbsj7bcihqa7xau6ewsnew4kkul7phwb4ucjm
- valory/market_maker:0.1.0:bafybeiftimqgvrbval2lxp7au6y72amioo4gtcdth2dflrbwa47i6opyb4
- valory/erc20:0.1.0:bafybeifjwr6rwklgg2uk2zkfysn55qqy7dfi4jx7sek6lzdup37fynhpxe
- valory/multisend:0.1.0:bafybeie7m7pjbnw7cccpbvmbgkut24dtlt4cgvug3tbac7gej37xvwbv3a
- valory/mech:0.1.0:bafybeie753wdqks6k4x5fqlpo7tgll2avutjcaodpwlptqvzefsi5xbvai
- valory/conditional_tokens:0.1.0:bafybeicxwjdbmjajgr5rsmadtkxxwmcm42r2htef3tvng73uzib4hmb6qa
- valory/realitio:0.1.0:bafybeigb722aznqhc5lsbt3dn4bpyaqe5hnl5onmnestqmzliwtvl3eaom
- valory/realitio_proxy:0.1.0:bafybeibvndq6756qck7forgeavhdbn6ykgqs2ufyg7n5g6qdfpveatxuwy
protocols:
- valory/contract_api:1.0.0:bafybeiasywsvax45qmugus5kxogejj66c5taen27h4voriodz7rgushtqa
skills:
- valory/abstract_round_abci:0.1.0:bafybeif3cqkks5qx3lqi6nwwhebcirhazt2vidw3sueeqsyxvjeszjt3om
- valory/market_manager_abci:0.1.0:bafybeiewxh5wcmmuzzlk2d2bcyyoilbawokcgc2elle3u33vjta5q3v53a
- valory/transaction_settlement_abci:0.1.0:bafybeiglsnh2hvfau5gab7requh34k4sbqwbjvrhhqjpes4hakcwq46cpi
behaviours:
  main:
    args: {}
    class_name: AgentDecisionMakerRoundBehaviour
handlers:
  abci:
    args: {}
    class_name: ABCIHandler
  contract_api:
    args: {}
    class_name: ContractApiHandler
  http:
    args: {}
    class_name: HttpHandler
  ipfs:
    args: {}
    class_name: IpfsHandler
  ledger_api:
    args: {}
    class_name: LedgerApiHandler
  signing:
    args: {}
    class_name: SigningHandler
  tendermint:
    args: {}
    class_name: TendermintHandler
models:
  abci_dialogues:
    args: {}
    class_name: AbciDialogues
  benchmark_tool:
    args:
      log_dir: /logs
    class_name: BenchmarkTool
  contract_api_dialogues:
    args: {}
    class_name: ContractApiDialogues
  http_dialogues:
    args: {}
    class_name: HttpDialogues
  ipfs_dialogues:
    args: {}
    class_name: IpfsDialogues
  ledger_api_dialogues:
    args: {}
    class_name: LedgerApiDialogues
  params:
    args:
      cleanup_history_depth: 1
      cleanup_history_depth_current: null
      drand_public_key: 868f005eb8e6e4ca0a47c8a77ceaa5309a47978a7c71bc5cce96366b5d7a569937c529eeda66c7293784a9402801af31
      genesis_config:
        genesis_time: '2022-05-20T16:00:21.735122717Z'
        chain_id: chain-c4daS1
        consensus_params:
          block:
            max_bytes: '22020096'
            max_gas: '-1'
            time_iota_ms: '1000'
          evidence:
            max_age_num_blocks: '100000'
            max_age_duration: '172800000000000'
            max_bytes: '1048576'
          validator:
            pub_key_types:
            - ed25519
          version: {}
        voting_power: '10'
      keeper_timeout: 30.0
      max_attempts: 10
      max_healthcheck: 120
      on_chain_service_id: null
      request_retry_delay: 1.0
      request_timeout: 10.0
      reset_pause_duration: 10
      reset_tendermint_after: 2
      retry_attempts: 400
      retry_timeout: 3
      round_timeout_seconds: 350.0
      service_id: decision_maker
      service_registry_address: null
      setup:
        all_participants:
        - '0x0000000000000000000000000000000000000000'
        safe_contract_address: '0x0000000000000000000000000000000000000000'
        consensus_threshold: null
      share_tm_config_on_startup: false
      sleep_time: 1
      use_slashing: false
      slash_cooldown_hours: 3
      slash_threshold_amount: 10000000000000000
      light_slash_unit_amount: 5000000000000000
      serious_slash_unit_amount: 8000000000000000
      tendermint_check_sleep_delay: 3
      tendermint_com_url: http://localhost:8080
      tendermint_max_retries: 5
      tendermint_p2p_url: localhost:26656
      tendermint_url: http://localhost:26657
      tx_timeout: 10.0
      use_termination: false
      mech_agent_address: '0xff82123dfb52ab75c417195c5fdb87630145ae81'
      mech_tool: prediction-online
      bet_amount_per_threshold:
        0.0: 0
        0.1: 0
        0.2: 0
        0.3: 0
        0.4: 0
        0.5: 0
        0.6: 0
        0.7: 0
        0.8: 0
        0.9: 0
        1.0: 0
      bet_threshold: 100000000000000000
      blacklisting_duration: 3600
      ipfs_address: https://gateway.autonolas.tech/ipfs/
      prompt_template: With the given question "@{question}" and the `yes` option
        represented by `@{yes}` and the `no` option represented by `@{no}`, what are
        the respective probabilities of `p_yes` and `p_no` occurring?
      dust_threshold: 10000000000000
      conditional_tokens_address: '0xCeAfDD6bc0bEF976fdCd1112955828E00543c0Ce'
      realitio_proxy_address: '0xAB16D643bA051C11962DA645f74632d3130c81E2'
      realitio_address: '0x79e32aE03fb27B07C89c0c568F80287C01ca2E57'
      redeeming_batch_size: 5
      slippage: 0.01
    class_name: DecisionMakerParams
  mech_response:
    args:
      api_id: mech_response
      headers:
        Content-Type: application/json
      method: GET
      parameters: {}
      response_key: null
      response_type: dict
      retries: 5
      url: ''
    class_name: MechResponseSpecs
  requests:
    args: {}
    class_name: Requests
  signing_dialogues:
    args: {}
    class_name: SigningDialogues
  state:
    args: {}
    class_name: SharedState
  tendermint_dialogues:
    args: {}
    class_name: TendermintDialogues
dependencies:
  hexbytes:
    version: ==0.3.1
  py-multibase:
    version: ==1.0.3
  py-multicodec:
    version: ==0.2.1
  open-aea-web3:
    version: ==6.0.1
is_abstract: true
